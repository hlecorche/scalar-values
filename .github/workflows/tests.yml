name: Tests

on:
    push:
    pull_request:
    schedule:
        - cron: '30 7 * * 1'

jobs:
    tests:
        if: (github.event_name == 'schedule' && github.repository == 'e-commit/scalar-values') || (github.event_name != 'schedule')
        strategy:
            fail-fast: false
            matrix:
                include:
                    -   php-version: '8.1'
                        composer-flags: '--prefer-stable --prefer-lowest'
                        description: 'with lowest'
                    -   php-version: '8.1'
                    -   php-version: '8.2'
                    -   php-version: '8.3'
                    -   php-version: '8.4'

                    #CS
                    -   php-version: '8.2'
                        description: 'with Coding Standards'
                        coding-standards: true

                    #Static Analysis (min PHP version)
                    -   php-version: '8.1'
                        description: 'with Static Analysis'
                        static-analysis: true

        name: PHP ${{ matrix.php-version }} ${{ matrix.description }}

        runs-on: 'ubuntu-latest'

        steps:
            -   name: Checkout
                uses: actions/checkout@v2

            -   name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: ${{ matrix.php-version }}
                    coverage: none
                env:
                    update: true

            -   name: Display versions
                run: |
                    php -r 'foreach (get_loaded_extensions() as $extension) echo $extension . " " . phpversion($extension) . PHP_EOL;'
                    php -i

            -   name: Get Composer cache directory
                id: composer-cache
                run: echo "::set-output name=dir::$(composer config cache-dir)"

            -   name: Cache dependencies
                uses: actions/cache@v3
                with:
                    path: ${{ steps.composer-cache.outputs.dir }}
                    key: composer-${{ runner.os }}-${{ matrix.php-version }}-${{ hashFiles('**/composer.*') }}-${{ matrix.composer-flags }}
                    restore-keys: composer-${{ runner.os }}-${{ matrix.php-version }}-

            -   name: Remove friendsofphp/php-cs-fixer
                if: matrix.coding-standards != true
                run: composer remove friendsofphp/php-cs-fixer --dev --no-update

            -   name: Remove phpstan/phpstan
                if: matrix.static-analysis != true
                run: composer remove phpstan/phpstan --dev --no-update

            -   name: Install dependencies
                run: composer update --no-interaction --no-progress ${{ matrix.composer-flags }}

            -   name: Run PHPUnit
                if: matrix.coding-standards != true && matrix.static-analysis != true
                run: php vendor/phpunit/phpunit/phpunit

            -   name: Run PHP CS Fixer
                if: matrix.coding-standards
                run: php vendor/friendsofphp/php-cs-fixer/php-cs-fixer fix --diff --dry-run -v

            -   name: Analyze composer dependencies
                if: matrix.coding-standards
                run: |
                    curl -LSs https://github.com/maglnet/ComposerRequireChecker/releases/latest/download/composer-require-checker.phar > composer-require-checker.phar
                    php composer-require-checker.phar check composer.json

            -   name: Check license year
                if: matrix.coding-standards
                run: cat LICENSE |grep -E "\(c\) ([0-9]+\-)*`date +%Y`"

            -   name: Run PHPStan
                if: matrix.static-analysis
                run: php vendor/bin/phpstan --no-progress --error-format=github
